#cloud-config
---
hostname: <HOSTNAME> 
users:
  - name: core
    ssh-authorized-keys: 
      - "<SSH_PUBLIC_KEY>"
    groups: 
      - sudo
    shell: /bin/bash

write_files:
  - path: /etc/kubelet-plugins/calico/calico_kubernetes.ini
    owner: root
    permissions: 0755
    content: |
      [config]
      # The Kubernetes master IP
      KUBERNETES_MASTER=<KUBERNETES_MASTER>
      
      # IP and port of etcd instance used by Calico
      ETCD_AUTHORITY=<KUBERNETES_MASTER>:6666
      
      # URL to access the Kubernetes apiserver
      KUBE_API_ROOT=https://<KUBERNETES_MASTER>:443/api/v1/

      # TOKEN used to access the Kubernetes API
      KUBE_AUTH_TOKEN="<AUTH_TOKEN>"

      # Enable Calcio IPAM
      CALICO_IPAM=true

  - path: /opt/bin/setup-network-environment.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash

      # Download binary 
      mkdir -p /opt/bin
      wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
      chmod +x /opt/bin/setup-network-environment

      # Run setup-network-environment.
      /opt/bin/setup-network-environment

  - path: /opt/bin/kubernetes-install.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      
      if [ ! -f /opt/bin/kubelet ]; then
        echo "Kubenetes not installed - installing."

        # Extract the Kubernetes binaries.
        sudo wget -N -P /opt/bin http://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kubelet
        sudo chmod +x /opt/bin/kubelet

        # Create required folders
        sudo mkdir -p /etc/kubernetes/manifests/
        sudo mkdir -p /etc/kubernetes/ssl/
      fi

  - path: /opt/bin/calico-install.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      
      if [ ! -f /opt/bin/calicoctl ]; then
        echo "Calico not installed - installing."
       
        # Install the `calicoctl` binary
        wget https://github.com/projectcalico/calico-docker/releases/download/v0.13.0/calicoctl
        chmod +x calicoctl
        sudo mv calicoctl /opt/bin

        # Fetch the calico/node container
        sudo docker pull calico/node:v0.13.0
      fi

  - path: /etc/kubernetes/ssl/ca.pem
    owner: core
    permissions: 0644
    content: |
      <CA_CERT>
  - path: /etc/kubernetes/ssl/worker.pem
    owner: core
    permissions: 0644
    content: |
      <WORKER_CERT>
  - path: /etc/kubernetes/ssl/worker-key.pem
    owner: root
    permissions: 0600
    content: |
      <WORKER_KEY>

  - path: /etc/kubernetes/worker-kubeconfig.yaml
    owner: root
    permissions: 0755
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: https://kubernetes-master
          certificate-authority: /etc/kubernetes/ssl/ca.pem
      users:
      - name: kubelet
        user:
          client-certificate: /etc/kubernetes/ssl/worker.pem
          client-key: /etc/kubernetes/ssl/worker-key.pem
      contexts:
      - context:
          cluster: local
          user: kubelet
        name: kubelet-context
      current-context: kubelet-context

  - path: /etc/kubernetes/manifests/kube-proxy.manifest
    owner: root
    permissions: 0755
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: gcr.io/google_containers/hyperkube:v1.1.2
          command:
          - /hyperkube
          - proxy
          - --master=https://kubernetes-master:443
          - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml
          - --proxy-mode=iptables
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: "ssl-certs"
            - mountPath: /etc/kubernetes/worker-kubeconfig.yaml
              name: "kubeconfig"
              readOnly: true
            - mountPath: /etc/kubernetes/ssl
              name: "etc-kube-ssl"
              readOnly: true
        volumes:
          - name: "ssl-certs"
            hostPath:
              path: "/usr/share/ca-certificates"
          - name: "kubeconfig"
            hostPath:
              path: "/etc/kubernetes/worker-kubeconfig.yaml"
          - name: "etc-kube-ssl"
            hostPath:
              path: "/etc/kubernetes/ssl"

coreos:
  update:
    reboot-strategy: off
  units:
    - name: setup-network-environment.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStart=/opt/bin/setup-network-environment.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: kubernetes-install.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Installs Kubernetes tools
        After=network-online.target
        Requires=network-online.target

        [Service]
        ExecStart=/opt/bin/kubernetes-install.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: calico-install.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Installs Calico tools
        After=kubernetes-install.service
        Requires=docker.service

        [Service]
        ExecStart=/opt/bin/calico-install.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=calicoctl node
        After=calico-install.service
        Requires=docker.service
        
        [Service]
        User=root
        EnvironmentFile=/etc/network-environment
        Environment=ETCD_AUTHORITY=<KUBERNETES_MASTER>:6666
        PermissionsStartOnly=true
        ExecStart=/opt/bin/calicoctl node --kubernetes --kube-plugin-version=v0.7.0 --detach=false
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

    - name: kubelet.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=calico-node.service
        Requires=calico-node.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/kubelet-plugins/calico/calico_kubernetes.ini
        ExecStart=/opt/bin/kubelet \
        --port=10250 \
        --address=0.0.0.0 \
        --allow-privileged=true \
        --cluster-dns=10.100.0.10 \
        --cluster-domain=cluster.local \
        --config=/etc/kubernetes/manifests \
        --hostname-override=${DEFAULT_IPV4} \
        --api-servers=https://${KUBERNETES_MASTER}:443 \
        --network-plugin-dir=/etc/kubelet-plugins \
        --network-plugin=calico \
        --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml \
        --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem \
        --tls-cert-file=/etc/kubernetes/ssl/worker.pem \
        --logtostderr=true
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
